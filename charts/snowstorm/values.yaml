# Default values for snowstorm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Elasticsearch Service Configuration
elasticsearch:
  image:
    repository: docker.elastic.co/elasticsearch/elasticsearch
    tag: 8.11.1
    pullPolicy: IfNotPresent
  environment:
    DISCOVERY_TYPE: single-node
    XPACK_SECURITY_ENABLED: "false"
    NODE_NAME: snowstorm
    CLUSTER_NAME: snowstorm-cluster
    ES_JAVA_OPTS: "-Xms4g -Xmx4g"
  service:
    enabled: true
    type: ClusterIP
    port: 9200
  resources: {}
  # Uncomment and adjust the following resources as needed:
  # resources:
  #   requests:
  #     cpu: 500m
  #     memory: 4Gi
  #   limits:
  #     cpu: 2
  #     memory: 6Gi
  persistence:
    enabled: false
    accessMode: ReadWriteOnce
    size: 10Gi
    storageClass: ""

# Snowstorm Configuration
snowstorm:
  image:
    repository: snomedinternational/snowstorm
    tag: latest
    pullPolicy: Always
  service:
    enabled: true
    type: ClusterIP
    port: 8080
  resources: {}
# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Browser Configuration
browser:
  image:
    repository: snomedinternational/snomedct-browser
    tag: latest
    pullPolicy: IfNotPresent
  service:
    enabled: true
    type: LoadBalancer
    port: 80
  resources: {}
    # Uncomment and adjust as needed
    # requests:
    #   cpu: 100m
    #   memory: 256Mi
    # limits:
    #   cpu: 500m
    #   memory: 512Mi

# Ingress Configuration
ingress:
  enabled: false
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
